<template>
	<view class="market-list-item">
		<view class="tui-list-cell" :class="[lastChild ? 'tui-last-child' : '']"   @click="bindClick"  >
<!-- 			<u--image  class="market-item-avatar ":showLoading="true" :src="entity.avatar" shape="circle" ></u--image>
 -->			
			<!-- <u-row justify="space-between" gutter="10"> -->
			<!-- <view  class="row-lay"  :style="{width : getWidthOfTitleHeader()}"> -->
			<!-- <u-row justify = "space-between"> -->
			<!-- <view class="market-title" > -->
			
			    <u-row :style="{width : getWidthOfTitleHeader()}">
			
			    <view :style="{width :getWidthOfSpan(5)}" >
			        <view class="title-layout info-layout" id="title_name" @tap="sort">
						<u--image  class="market-item-avatar " :showLoading="true" :src="entity.image" shape="circle" width="50px"
					     height="50px"></u--image>
						<view class="tui-title-box">
							<text class="tui-cell-title">{{ entity.title }}</text>
							<view class="tui-sub-title">
								<text class="tui-sub-content">{{ entity.platform}}</text>
							</view>
						</view>
					</view>
			    </view>
			    <view :style="{width :getWidthOfSpan(4)}" >
			    
			        <view class="title-layout bg-purple" id="title_price" @tap="sort">
						<text class="tui-cell-title">ï¿¥{{ entity.price }}</text>
					</view>
			    </view>
			    <view :style="{width :getWidthOfSpan(3)}" >
			    
			        <view class="title-layout bg-purple-dark" id="title_delta" :class="[getClass(entity.delta)]" @tap="sort">
						
						<text class="tui-cell-title title-del">{{getPercentage(entity.delta )}}</text>
						<!-- <text class="tui-badge" v-if="entity.badgeType != 0">{{ entity.badgeText }}</text> -->
						
					</view>
			    </view>
				<view :style="{width :getWidthOfSpan(3)}" >
				
				    <view class="title-layout bg-purple-dark" id="title_delta" :class="[getClass(entity.delta)]" @tap="sort">
						
						<text class="tui-cell-title title-del">{{getPercentage(entity.delta )}}</text>
						<!-- <text class="tui-badge" v-if="entity.badgeType != 0">{{ entity.badgeText }}</text> -->
						
					</view>
				</view>
				<view :style="{width :getWidthOfSpan(3)}" >
				
				    <view class="title-layout bg-purple-dark" id="title_delta" :class="[getClass(entity.delta)]" @tap="sort">
						
						<text class="tui-cell-title title-del">{{getPercentage(entity.delta )}}</text>
						<!-- <text class="tui-badge" v-if="entity.badgeType != 0">{{ entity.badgeText }}</text> -->
						
					</view>
				</view>
			</u-row>
			<!-- </view> -->
			<!-- <tui-divider></tui-divider> -->

		</view>
	</view>
</template>

<script>
export default {
	components:{
		
	},
	name: 'marketItem',
	emits: ['click'],
	props: {
		entity: {
			type: Object,
			default: function(e) {
				return {};
			}
		},
		lastChild: {
			type: Boolean,
			default: false
		}
	},
	methods: {
		bindClick() {
			this.$emit('click');
		},
		getClass(delta){
			return delta > 0 ? "green-tag" : "red-tag"
		},
		getPercentage(delta){
			var sign = delta > 0 ? "+" : "-"
			return sign + Math.abs(delta) + "%"
		},
		getWidthOfSpan(e){
			let systemInfo = uni.getSystemInfoSync()
			let width = systemInfo.windowWidth;
			// console.log(e, e/12 * (width - 34*2))
			return e /12 * (width - uni.upx2px(34)*2) + "px"
		
		},
		getWidthOfTitleHeader(e){
			let systemInfo = uni.getSystemInfoSync()
			let width = systemInfo.windowWidth;
			let count = 15;
			let base = 12;
			// console.log(width * 1 - 34 * 2)
			// console.log(width * count/base  - 34 * 2)
			 3
			return (width - uni.upx2px(34) * 2) * count/base  + "px"
		},
	}
};
</script>

<style>
.market-list-item {
	width: 750rpx;
	background-color: #fff;
	/* padding-bottom: env(safe-area-inset-bottom); */
}

.market-list-item:active {
	background-color: #eeeeee;
}

.tui-list-cell {
	width: 1000rpx;
	padding-left: 30rpx;
	padding-top: 30rpx;
	padding-bottom: 30rpx;
	padding-right: 30rpx;
	/* #ifdef APP-PLUS*/
	border-bottom-width: 1rpx;
	border-bottom-style: solid;
	border-bottom-color: #e6e6e6;
	/* #endif */
	position: relative;
	flex: 1;
	background-color: #FFFFFF;
	align-content: space-between;
	
}

/* #ifndef APP-PLUS*/
.tui-list-cell::after {
	content: '';
	position: absolute;
	border-bottom: 1rpx solid #eaeef1;
	-webkit-transform: scaleY(0.5);
	transform: scaleY(0.5);
	bottom: 0;
	right: 0;
	left: 0;
	flex-direction: column;
	align-content: space-between;
}
/* #endif */

.tui-last-child {
	border-bottom-width: 0;
}

.tui-title-box {
	width: 690rpx;
	flex: 1;
	/* #ifdef APP-PLUS */
	lines: 2;
	/* #endif */
	padding-left: 15rpx;
	/* #ifndef APP-PLUS */
	word-break: break-all;
	overflow: hidden;
	display: -webkit-box;
	-webkit-box-orient: vertical;
	-webkit-line-clamp: 2;
	
	/* #endif */
}

.tui-cell-title {
	font-size: 30rpx;
	line-height: 56rpx;
	/* text-align: left; */
	flex: 1;
	/* #ifdef APP-PLUS */
	lines: 1;
	/* #endif */

	/* #ifndef APP-PLUS */
	word-break: break-all;
	overflow: hidden;
	display: -webkit-box;
	-webkit-box-orient: vertical;
	-webkit-line-clamp: 1;
	/* #endif */
	text-overflow: ellipsis;
	font-weight: bold;
	color: #333333;
}

.tui-sub-title {
	padding-top: 0rpx;
	padding-left: 2rpx;
	align-items: center;
	flex-direction: row;
}

.tui-sub-content {
	font-size: 24rpx;
	color: #bcbcbc;
}

.info-layout{
	/* flex-direction: column;
	justify-content: flex-start;
	 */
	/* align-items: left; */
	 flex-direction: row;
	 align-items: center;
}
.green-tag {
	background-color: #56BFA6;
	border-radius: 15rpx;
	color: #FFFFFF;
	align-items: center;
	margin-right: 10rpx;
	
	
}
.red-tag {
	background-color: #D53912;
	border-radius: 15rpx;
	
	align-items: center;
	margin-right: 10rpx;
	
}
.title-del {
	color: #FFFFFF;
	font-size: 30rpx;
}
.market-item-avatar{
	/* width: 50px;
	height: 50px;
	radius: 25px; */
}
.row-lay{
	flex-direction: row;
	/* align-items: center; */
	/* justify-content:space-between; */
	
}
.title-layout::after{
	/* align-items: center; */
	margin-right: 10rpx;
}


</style>
